#ifndef TILEMAP_H
#define TILEMAP_H

#define TILEMAP_ROWS 64
#define TILEMAP_COLS 64

struct tile
{
    u32 Base;
    u32 Decoration;
    u32 Collition; 
};

struct tilemap
{
    u32 Cols;
    u32 Rows;
    u32 TileWidth;
    u32 TileHeight;
    tile Tiles[TILEMAP_ROWS*TILEMAP_COLS]; // for now our tilemap are going to be 64x64 tiles
};

u32 Tiles1[] = {        
    48, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 37, 37, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 48,
};

u32 Collitions[] {
    48, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 37, 37, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48,
    48, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 48,
};

bool IsCollision(v2 Position)
{
    i32 TileX = Position.X / 16;
    i32 TileY = Position.Y / 16;
    if(TileX >= 0 && TileX < 16 && TileY >= 0 && TileY < 16)
    {
        return Collitions[TileY * 16 + TileX] != 0;
    }
    return true;
}

#endif
